---
AWSTemplateFormatVersion: "2010-09-09"
Description: >
  This template creates a new Customer VPC used for the VPN exercise.
  The template also creates an EC2 instance on the private subnet for testing
  purposes, and an RDS MySQL instance.

Parameters:
  CustomerStackName:
    Description: >
      Name of the stack that deployed the Customer VPC
      for the bastion GE
    Type: String
  RosaStackName:
    Description: >
      Name of the stack that deployed the AWS infrastructure
      for the ROSA cluster.
    Type: String
  pCustomerVpcVpnCidrBlock:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: 10.3.0.0/16
    Description: Customer VPC CIDR block (10.3.0.0/16 for example).
    Type: String
  pCustomerVpcVpnPrivateSubnetACidrBlock:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: 10.3.0.0/24
    Description: >
      CIDR block for the private subnet in the customer VPC
      (10.3.0.0/24 for example).
    Type: String
  pCustomerVpcVpnPrivateSubnetBCidrBlock:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: 10.3.1.0/24
    Description: >
      CIDR block for the private subnet in the customer VPC
      (10.3.1.0/24 for example).
    Type: String
  pAmiId:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
  pVpnClientCertARN:
    Description: >
      Identifier for the Client certificate stored in
      the AWS certificate manager.
    Type: String
  pVpnServerCertARN:
    Description: >
      Identifier for the Server certificate stored in
      the AWS certificate manager.
    Type: String

Resources:
  # Client VPN Endpoint
  rCustomerClientVpnEndpoint:
    Type: AWS::EC2::ClientVpnEndpoint
    Properties:
      AuthenticationOptions:
        - Type: "certificate-authentication"
          MutualAuthentication:
            ClientRootCertificateChainArn:
              Ref: pVpnClientCertARN
      DnsServers:
        - "10.2.0.2"
      SplitTunnel: true
      TransportProtocol: "udp"
      ServerCertificateArn:
        Ref: pVpnServerCertARN
      ClientCidrBlock: "172.16.0.0/16"
      ConnectionLogOptions:
        Enabled: false
      TagSpecifications:
        - ResourceType: "client-vpn-endpoint"
          Tags:
            - Key: "Name"
              Value:
                Fn::Join:
                  - ""
                  - - Fn::ImportValue:
                        !Join [":", [!Ref RosaStackName, RosaClusterName]]
                    - "-customer-client-vpn-endpoint"
            - Key: "redhattraining:course-sku"
              Value: "CS220-vpn"
  # Target Customer Network association for the VPN endpoint
  rCustomerClientVpnTargetNetwork:
    Type: AWS::EC2::ClientVpnTargetNetworkAssociation
    Properties:
      ClientVpnEndpointId:
        Ref: rCustomerClientVpnEndpoint
      SubnetId:
        Fn::ImportValue:
          !Join ["-", [!Ref CustomerStackName, CustomerVPCPrivateSubnetA]]

  # Keypair is stored in AWS Systems Manager at /ec2/keypair/<key-pair-id>
  rKeyPairEc2Vpn:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName:
        Fn::Join:
          - ""
          - - Fn::ImportValue:
                !Join [":", [!Ref RosaStackName, RosaClusterName]]
            - "-ec2KeyPairVpn"
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ""
              - - Fn::ImportValue:
                    !Join [":", [!Ref RosaStackName, RosaClusterName]]
                - "-ec2-keypair-customer-vpc-vpn"
        - Key: "redhattraining:course-sku"
          Value: CS220-vpn

  # Create an EC2 instance
  rEc2InstaceVpn:
    Type: AWS::EC2::Instance
    DependsOn: rKeyPairEc2Vpn
    Properties:
      InstanceType: t2.micro
      KeyName:
        Fn::Join:
          - ""
          - - Fn::ImportValue:
                !Join [":", [!Ref RosaStackName, RosaClusterName]]
            - "-ec2KeyPairVpn"
      ImageId: !Ref pAmiId
      NetworkInterfaces:
        - GroupSet:
            - Fn::ImportValue:
                !Join ["-", [!Ref CustomerStackName, SecurityGroupBastion]]
          AssociatePublicIpAddress: false
          DeviceIndex: 0
          DeleteOnTermination: true
          SubnetId:
            Fn::ImportValue:
              !Join ["-", [!Ref CustomerStackName, CustomerVPCPrivateSubnetA]]
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ""
              - - Fn::ImportValue:
                    !Join [":", [!Ref RosaStackName, RosaClusterName]]
                - "-ec2-instance-customer-vpc-vpn"
        - Key: "redhattraining:course-sku"
          Value: CS220-vpn

Outputs:
  oStackName:
    Description: Name of the stack
    Value:
      Ref: AWS::StackName
